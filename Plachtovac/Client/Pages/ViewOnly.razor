@page "/view/{name?}"
@using System.Globalization
@using Plachtovac.Client.Services
@using Plachtovac.Shared.BO
@using Plachtovac.Client.Components.Plachta


@inject PlachtaService PlachtaService
@inject NavigationManager NavigationManager

@if (PlachtaService.AktualnyRozvrh != null)
{
    @foreach (var veduci in Rozvrh.Veduci.Where(v => Name == null || v.Prezyvka.Equals(Name)))
    {
        <div class="portrait program-stretnutia">
            <h1>@Rozvrh.Nazov: @Rozvrh.ZaciatokRozvrhu?.ToString("dd.MM") - <strong>@veduci.Prezyvka</strong></h1>

            <div class="program-stretnutia-container">
                <div class="dennyProgram">
                    <h2>Program dňa</h2>
                    @if (!string.IsNullOrWhiteSpace(Rozvrh.Program))
                    {
                        @foreach (var row in Rozvrh.Program.Split("\n"))
                        {
                            var parts = row.Split(" ");
                            var cas = parts.First();
                            var program = string.Join(" ", parts.Skip(1));
                            <span class="program-cas"><strong>@cas</strong></span>
                            @program
                            <br />
                        }
                    }
                </div>
                <div class="mojProgram">
                    <h2>Môj program</h2>
                    <div>
                        @{
                            var aktivity = Rozvrh.Dni.SelectMany(d => d.Aktivity.Where(a => a.JeVeduci(veduci)).Select(a => (d, a)));
                            var maxRows = aktivity.Count() > 15 ? ((aktivity.Count() / 2) + 1) : 15;
                        }
                        @for (var i = 0; i <= aktivity.Count() / maxRows; i++)
                        {
                            <div>
                                @foreach (var (den, aktivita) in aktivity.Skip(i * maxRows).Take(maxRows))
                                {
                                    <span style="margin-right: 3px;"><strong>@(DniVTyzdni.GetDen((den.Poradie + PlachtaService.AktualnyRozvrh.Zaciatok) % 7))</strong></span>
                                    <span style="margin-right: 3px;"><strong>@aktivita.Time.ToString("hh\\:mm"):</strong></span>
                                    <span style="margin-right: 3px;">@aktivita.Nazov -</span>
                                    <span style="margin-right: 3px;">@aktivita.GetPopisVeduceho(veduci)</span>
                                    <br>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="druzinky">
                    <h2>Vedúci družín</h2>
                    @foreach (var druzinka in Rozvrh.Veduci.GroupBy(v => v.Druzinka))
                    {
                        if (!string.IsNullOrWhiteSpace(druzinka.Key))
                        {
                            <strong>@druzinka.Key<text>: </text></strong>
                            @string.Join(", ", druzinka.Select(v => v.Prezyvka))<br />
                        }
                    }
                </div>
                <div class="kruzky">
                    <h2>Zoznam krúžkov</h2>
                    @{
                        var kruzkyAktivita = Rozvrh.SablonyAktivit.FirstOrDefault(k => k.Typ == "Krúžok");
                        if (kruzkyAktivita != null)
                        {
                            foreach (var kruzok in kruzkyAktivita.Veduci.GroupBy(v => v.Popis))
                            {
                                @string.Join(", ", kruzok.Select(v => v.Veduci.Prezyvka))<text>: </text>
                                <strong>@kruzok.Key</strong><br />
                            }
                        }
                    }
                </div>
                <div class="zoznamNaDonesenie">
                    <h2>Čo si mám doniesť (okrem vecí na svoj program)</h2>
                    <ul>
                        <li>Čokoládu či koláč 😁</li>
                        <li>Notebook a/alebo gitaru, ak si to na chystačke sľúbil</li>
                        <li>Knižku na večerné čítanie</li>
                        <li>Hru na poobedné voľno</li>
                        <li>Noviny na mokré topánky</li>
                        <li>Prezuvky</li>
                        <li>Čelovky/baterky</li>
                        <li>Pokrývka hlavy</li>
                        <li>Dlhé gate</li>
                    </ul>
                </div>
                <div class="bonusy">
                    <h2>Bonusy</h2>
                    @{
                        var first = true;
                        var zoznamBonusov = Rozvrh.Veduci.SelectMany(v => v.Ulohy.Select(u => new { v.Prezyvka, u })).GroupBy(x => x.u).OrderBy(g => g.Key);
                        @foreach (var bonus in zoznamBonusov.Where(b => !b.Key.StartsWith("nástenka")))
                        {
                            if (first)
                            {
                                first = false;
                            }
                            else
                            {
                                <span> | </span>
                            }
                            <span class="text-nowrap">
                                <strong>@bonus.Key<text>: </text></strong>
                                @{
                                    var mena = bonus.Select(v => v.Prezyvka).OrderBy(x => x).ToArray();
                                    for (int i = 0; i < mena.Length; i++)
                                    {
                                        <span class="@((veduci.Prezyvka == mena[i]) ? "zvyraznene-meno" : "")">@mena[i]</span>
                                        if (i < (mena.Length - 1))
                                        {
                                            <text>,&nbsp;</text>
                                        }
                                    }
                                }
                            </span>
                        }
                        <div class="text-center">
                            @foreach (var bonus in zoznamBonusov.Where(b => b.Key.StartsWith("nástenka")))
                            {
                                <span class="text-nowrap">
                                    <strong>@bonus.Key<text>: </text></strong>
                                    @{
                                        var mena = bonus.Select(v => v.Prezyvka).OrderBy(x => x).ToArray();
                                        for (int i = 0; i < mena.Length; i++)
                                        {
                                            <span class="@((veduci.Prezyvka == mena[i]) ? "zvyraznene-meno" : "")">@mena[i]</span>
                                            if (i < (mena.Length - 1))
                                            {
                                                <text>,&nbsp;</text>
                                            }
                                        }
                                    }
                                </span>
                                <br />
                            }
                        </div>
                    }
                </div>
                <div class="fotka">
                    <img src="@(veduci.Fotka ?? "https://sezam.sk/wp-content/uploads/2020/02/logo.jpg")" />
                </div>
                <div class="prednasky">
                    <h2>Zoznam prednášok</h2>
                    @{
                        var prednasky = Rozvrh.Dni
                            .SelectMany(
                                d => d.Aktivity.OrderBy(a => a.Time).Where(a => a.Sablona.Typ == "Prednáška").ToList()
                                    .SelectMany(a => a.Veduci.Select(av => new { Veduci = av, Aktivita = a })));

                        var blockCounter = 0;
                        var lastAktivita = (Aktivita)null;

                        foreach (var aktivitaVeduci in prednasky)
                        {
                            if (aktivitaVeduci.Veduci.Popis?.Length > 2)
                            {
                                if (lastAktivita != aktivitaVeduci.Aktivita)
                                {
                                    lastAktivita = aktivitaVeduci.Aktivita;
                                    blockCounter++;
                                }
                                var parts = aktivitaVeduci.Veduci.Popis.Split(" ");
                                <text><span class="font-italic">(@parts[0] @blockCounter)</span> @aktivitaVeduci.Veduci.Veduci.Prezyvka: <strong>@string.Join(" ", parts.Skip(1))</strong></text>
                                <br />
                            }
                        }
                    }
                </div>
                <div class="semináre">
                    <h2>Semináre</h2>
                    @{
                        var seminare = Rozvrh.SablonyAktivit.FirstOrDefault(k => k.Typ == "Seminár");
                        if (seminare != null)
                        {
                            foreach (var seminar in seminare.Veduci.GroupBy(v => v.Popis))
                            {
                                @string.Join(", ", seminar.Select(v => v.Veduci.Prezyvka))<text>: </text>
                                <strong>@seminar.Key</strong><br />
                            }
                        }
                    }
                </div>
                <div class="rozpravania">
                    <h2>Rozprávania</h2>
                    <div>
                        @{
                            var rozpravania = Rozvrh.Dni
                                .SelectMany(
                                    d => d.Aktivity.OrderBy(a => a.Time).Where(a => a.Sablona.Typ == "Rozprávanie")
                                        .SelectMany((a, i) => a.Veduci.Select(av => new { Veduci = av, Aktivita = a })));

                            blockCounter = 0;
                            foreach (var rozpravanieBloky in rozpravania.GroupBy(x => x.Aktivita))
                            {
                                ++blockCounter;
                                <div>
                                    @foreach (var rozpravanie in rozpravanieBloky.GroupBy(r => r.Veduci.Popis))
                                    {
                                        <text>(@blockCounter) @string.Join(", ", rozpravanie.Select(x => x.Veduci.Veduci.Prezyvka)): <strong>@rozpravanie.Key</strong></text>
                                        <br />
                                    }
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="dalsiePoznamky">
                    <h2>A ešte</h2>
                    <ul>
                        <li>Každé ráno ísť na rozcvičku a na prednášky ostatných</li>
                        <li>Cez poobedné voľno čo najmenej chystať hry, a čo najviac byť s účastníkmi</li>
                        <li>Doniesť bločky, ak niečo na tábor kúpim</li>
                        <li>Spísať pravidlá každej hry, ktorú chystám</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="landscape">
            <PlachtaView Editable="false" Rozvrh="Rozvrh" VeduciToHilight="veduci"></PlachtaView>
        </div>
    }

    <style>
        .aktivita.veduci-aktivity > div::before, .den.veduci-dna .title {
            background: rgba(@RGBAVal);
        }

        .zvyraznene-meno {
            color: rgb(@(string.Join(",", RGBAVal.Split(",").Take(3))));
            font-weight: bold;
        }
    </style>
}

@code {
    [Parameter]
    public string Name { get; set; }

    public Rozvrh Rozvrh { get; private set; }
    public string RGBAVal { get; set; } = "100,100,100,0.2";

    protected override void OnInitialized()
    {
        Rozvrh = PlachtaService.AktualnyRozvrh;
        if (Rozvrh == null) NavigationManager.NavigateTo("./");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var farba = Rozvrh?.Farba ?? "#000000";

                var r = int.Parse(farba.Substring(1, 2), NumberStyles.HexNumber);
                var g = int.Parse(farba.Substring(3, 2), NumberStyles.HexNumber);
                var b = int.Parse(farba.Substring(5, 2), NumberStyles.HexNumber);

                RGBAVal = $@"{r},{g},{b},0.2";
                StateHasChanged();
            }
            catch
            {
                throw;
            }
        }
    }

}
